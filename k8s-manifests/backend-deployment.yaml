apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml --out ./k8s-manifests
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml --out ./k8s-manifests
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: backend
    spec:
      containers:
        - args:
            - bash
            - -c
            - python manage.py runserver 0.0.0.0:8000
          command:
            - bash
            - /usr/local/bin/entrypoint.sh
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                configMapKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: env
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  key: AWS_REGION
                  name: env
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: env
            - name: AWS_SNS_S3_OBJECT_PUT_NOTIFS
              valueFrom:
                configMapKeyRef:
                  key: AWS_SNS_S3_OBJECT_PUT_NOTIFS
                  name: env
            - name: AWS_STORAGE_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  key: AWS_STORAGE_BUCKET_NAME
                  name: env
            - name: CHOKIDAR_USEPOLLING
              value: "true"
            - name: CLARIFAI_PAT
              valueFrom:
                configMapKeyRef:
                  key: CLARIFAI_PAT
                  name: env
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  key: DB_URL
                  name: env
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  key: DB_HOST
                  name: env
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: DB_NAME
                  name: env
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: DB_PASSWORD
                  name: env
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  key: DB_PORT
                  name: env
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  key: DB_USER
                  name: env
            - name: DEVELOPER_ENV
              valueFrom:
                configMapKeyRef:
                  key: DEVELOPER_ENV
                  name: env
            - name: DEV_BACKEND_URL
              valueFrom:
                configMapKeyRef:
                  key: DEV_BACKEND_URL
                  name: env
            - name: DEV_FRONTEND_URL
              valueFrom:
                configMapKeyRef:
                  key: DEV_FRONTEND_URL
                  name: env
            - name: DJANGO_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_SECRET_KEY
                  name: env
            - name: NGROK_AUTHTOKEN
              valueFrom:
                configMapKeyRef:
                  key: NGROK_AUTHTOKEN
                  name: env
            - name: PROD_BACKEND_URL
              valueFrom:
                configMapKeyRef:
                  key: PROD_BACKEND_URL
                  name: env
            - name: PROD_FRONTEND_URL
              valueFrom:
                configMapKeyRef:
                  key: PROD_FRONTEND_URL
                  name: env
            - name: REACT_APP_API_URL
              value: http://backend:8000
            - name: REACT_APP_DEV_BACKEND_URL
              valueFrom:
                configMapKeyRef:
                  key: REACT_APP_DEV_BACKEND_URL
                  name: env
            - name: REACT_APP_NGROK_PUBLIC_URL
              valueFrom:
                configMapKeyRef:
                  key: REACT_APP_NGROK_PUBLIC_URL
                  name: env
            - name: REACT_APP_PROD_BACKEND_URL
              valueFrom:
                configMapKeyRef:
                  key: REACT_APP_PROD_BACKEND_URL
                  name: env
            - name: REACT_APP_SKIP_LOGIN
              valueFrom:
                configMapKeyRef:
                  key: REACT_APP_SKIP_LOGIN
                  name: env
            - name: TEST_ADMIN_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: TEST_ADMIN_PASSWORD
                  name: env
            - name: TEST_ADMIN_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: TEST_ADMIN_USERNAME
                  name: env
            - name: TEST_USER_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: TEST_USER_PASSWORD
                  name: env
            - name: TEST_USER_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: TEST_USER_USERNAME
                  name: env
            - name: WATCHPACK_POLLING
              value: "true"
          image: sdevinl/foodidentifier-backend:latest
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:8000/api/photos
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
          name: backend
          ports:
            - containerPort: 8000
              protocol: TCP
          volumeMounts:
            # - mountPath: /app
            #   name: backend-volume
            - mountPath: /usr/local/bin/entrypoint.sh
              name: backend-cm1
              readOnly: true
              subPath: entrypoint.sh
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: entrypoint.sh
                path: entrypoint.sh
            name: backend-cm1
          name: backend-cm1
        - name: backend-volume
          hostPath:
            # path: "I:/GitHub/FoodIdentifier/backend"  # Path on your local machine
            # path: "I:"  # Path on your local machine
            path : "C:\\Tools"
            type: Directory
        # - name: test-volume
        #   hostPath:
        #     path: "C:/Tools"  # Path on your local machine
        #     type: Directory
